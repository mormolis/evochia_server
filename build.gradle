plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'idea'
	id "org.flywaydb.flyway" version "6.4.1"
}

group = 'com.multipartyloops'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
sourceSets {
	main {}
	integrationTest {}
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.3.1.RELEASE'
	compile 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	// https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
	compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.5'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	// integration tests
	integrationTestCompile sourceSets.main.output
	integrationTestCompile sourceSets.main.allSource
	integrationTestRuntimeClasspath sourceSets.main.output
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-web'
	integrationTestImplementation 'org.flywaydb:flyway-core'
	integrationTestImplementation 'org.springframework.boot:spring-boot-starter-jdbc'
	integrationTestImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:mysql://localhost:3306/evochia_dev'
	user = 'evochia_developer'
	password = 'apassword'
}

task integrationTest(type: Test) {
	group 'Verification'
	useJUnitPlatform()
	description = "Run integration tests (located in src/integrationTests/...)."
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath

	testLogging {
		events "passed", "skipped", "failed"
		info {
			showStackTraces = true
			showCauses = true
			showExceptions = true
			exceptionFormat = "full"
			showStandardStreams = true
		}
	}

	// Always run integration tests
	outputs.upToDateWhen { false }
}